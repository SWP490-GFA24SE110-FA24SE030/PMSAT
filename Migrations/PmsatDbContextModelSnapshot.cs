// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PMSAT.Data;

#nullable disable

namespace PMSAT.Migrations
{
    [DbContext(typeof(PmsatDbContext))]
    partial class PmsatDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PMSAT.Entities.User", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserRoleID")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.Property<bool>("UserStatus")
                        .HasColumnType("bit");

                    b.HasKey("UserID");

                    b.HasIndex("UserRoleID")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = "AD00",
                            UserEmail = "admin@email.com",
                            UserName = "Admin",
                            UserPassword = "Password",
                            UserRoleID = "AD",
                            UserStatus = true
                        },
                        new
                        {
                            UserID = "MD00",
                            UserEmail = "mod@email.com",
                            UserName = "Moderator",
                            UserPassword = "Password",
                            UserRoleID = "MD",
                            UserStatus = true
                        },
                        new
                        {
                            UserID = "US000000",
                            UserEmail = "user@email.com",
                            UserName = "User",
                            UserPassword = "Password",
                            UserRoleID = "US",
                            UserStatus = true
                        });
                });

            modelBuilder.Entity("PMSAT.Entities.UserRole", b =>
                {
                    b.Property<string>("UserRoleID")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("UserRoleName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UserRoleID");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserRoleID = "AD",
                            UserRoleName = "Admin"
                        },
                        new
                        {
                            UserRoleID = "MD",
                            UserRoleName = "Moderator"
                        },
                        new
                        {
                            UserRoleID = "US",
                            UserRoleName = "User"
                        });
                });

            modelBuilder.Entity("PMSAT.Entities.User", b =>
                {
                    b.HasOne("PMSAT.Entities.UserRole", "UserRole")
                        .WithOne("User")
                        .HasForeignKey("PMSAT.Entities.User", "UserRoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("PMSAT.Entities.UserRole", b =>
                {
                    b.Navigation("User")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
